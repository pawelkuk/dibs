version: "3"
services:

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      - DB_HOST=postgres
      - DB_PASSWORD=postgres
      - API_HOST=app
      - PYTHONDONTWRITEBYTECODE=1
    volumes:
      - ./src/:/src/
    ports:
      - "5005:80"


  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"

  postgres_booking:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5435:5432"

  postgres_ticketing:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5433:5432"
  
  postgres_paying:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5434:5432"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: pass1234
    ports:
      - "5050:80"
    depends_on:
      - postgres
      - postgres_booking
      - postgres_ticketing
      - postgres_paying
    volumes:
      - ./src/server.json:/pgadmin/server.json

  celery:
    build: .
    command: watchmedo auto-restart --directory=. --patterns=*.py --recursive -- celery -A api worker -B -l debug -Q celery
    environment:
      - DB_HOST=postgres
      - DB_PASSWORD=postgres
      - API_HOST=app
      - PYTHONDONTWRITEBYTECODE=1
      - C_FORCE_ROOT=1
    depends_on:
      - postgres
    volumes:
      - ./src/:/src/

  rabbitmq:
      image: rabbitmq:management
      environment:
        - RABBITMQ_DEFAULT_USER=guest
        - RABBITMQ_DEFAULT_PASS=guest
      ports:
        - "5672:5672"
        - "15672:15672"
      volumes:
        - './volumes/rabbitmq/:/var/lib/rabbitmq/mnesia/'

  frontend:
    build: ./frontend
    command: npm start
    ports:
      - 3000:3000                                                                                                     
    environment:
      - CI=true
    volumes:
      - ./frontend:/frontend
  read_model:
    build: ./read-model
    command: nodemon --inspect server.js
    ports:
      - 3001:3001
      - 9229:9229
    volumes:
      - ./read-model:/read-model
    depends_on:
      - app